package com.pluralsight.ScreensManager;

import com.pluralsight.Interface.Screen;
import com.pluralsight.MenuItemManager.Chip;
import com.pluralsight.MenuItemManager.Drink;
import com.pluralsight.OrderManager.Order;
import com.pluralsight.MenuItemManager.Sandwich;
import com.pluralsight.Utility.ConsoleHelper;

public class OrderScreen implements Screen<Void> {

    private Order order;

    public OrderScreen(Order order) {
        this.order = order;
    }

    @Override
    public Void display() {
        while (true) {
            System.out.println("‚ú¶üçÉ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‡º∫‚òÅÔ∏éÔΩ°‚ãÜÔΩ° Ôæü‚òæ ÔæüÔΩ°‚ãÜÔΩ°‚òÅÔ∏é‡ºª‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüçÉ‚ú¶");
            System.out.println("                 üõí Order ScreensManager üõí");
            System.out.println("‚ú¶üçÉ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‡º∫ÔΩ°‚ãÜÔΩ°‚òæÔΩ°‚ãÜÔΩ°‚òÅÔ∏éÔΩ°‚ãÜÔΩ°‚òÅÔ∏é‡ºª‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅüçÉ‚ú¶");

            int choice = ConsoleHelper.readInt(
                    "\nüçΩÔ∏è Choose an item to add:\n" +
                            "   1Ô∏è‚É£ Custom Sandwich ü•™\n" +
                            "   2Ô∏è‚É£ Signature Sandwich ü•™\n" +
                            "   3Ô∏è‚É£ Add Drink ü•§\n" +
                            "   4Ô∏è‚É£ Add Chips üçü\n" +
                            "   5Ô∏è‚É£ Checkout üõí\n" +
                            "   0Ô∏è‚É£ Cancel Order üõë" +
                            "   \nüëâEnter your option: ",  0, 5);

            switch (choice) {
                case 1 -> customSandwich();
                case 2 -> signatureSandwich();
                case 3 -> addDrink();
                case 4 -> addChips();
                case 5 -> {
                    checkout();
                    return null;
                }
                case 0 -> {
                    cancelOrder();
                    return null;
                }
                default -> System.out.println("\n‚ùå Invalid choice. Please try again.\n");
            }
        }
    }


    private void customSandwich() {
        AddSandwichScreen screen = new AddSandwichScreen();
        Sandwich sandwich = screen.display();
        order.addItem(sandwich);
        System.out.println("\n‚úÖ Added " + sandwich.getName() + " to your order!\n");
    }

    private void signatureSandwich() {
        SignatureSandwichScreen screen = new SignatureSandwichScreen();
        Sandwich sandwich = screen.display();
        if (sandwich != null) {
            order.addItem(sandwich);
            System.out.println("\n‚úÖ Added " + sandwich.getName() + " to your order!\n");
        } else {
            System.out.println("‚ùå Signature sandwich selection cancelled.");
        }
    }

    private void addDrink() {
        AddDrinkScreen screen = new AddDrinkScreen();
        Drink drink = screen.display();
        order.addItem(drink);
        System.out.println("‚úÖ Added " + drink.getName() + " to your order!\n");
    }

    private void addChips() {
        AddChipsScreen screen = new AddChipsScreen();
        Chip chips = screen.display();
        order.addItem(chips);
        System.out.println("‚úÖ Added " + chips.getName() + " to your order!\n");
    }

    private void checkout() {
        CheckoutScreen checkoutScreen = new CheckoutScreen(order);
        checkoutScreen.display();
    }


    private void cancelOrder() {
        order.clearItems();
        System.out.println("\nüö´ Order canceled. Returning to home screen...\n");
    }
}
